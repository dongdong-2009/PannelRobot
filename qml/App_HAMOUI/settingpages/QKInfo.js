.pragma library

var qkParaInfo =
[
    {"name":qsTr("PwmPeriod"),"addr":0,"wVal":1999,"decs":qsTr("default value:1990,instruction:IGBT switching frequency (Hz) clock frequency =0.5* system (PwmPeriod / 1). When PwmMode=0, the non symmetric mode, current loop sampling frequency =2* switching frequency: when pwmMode=1, symmetric mode, current loop sampling frequency = switching frequency.")},
    {"name":qsTr("SampleStartDelay"),"addr":1,"wVal":10,"decs":qsTr("default value:10,instruction:A/D sampling delay time (NS) = system master clock cycle *SampleStartDela")},
    {"name":qsTr("SpdPosLpRate"),"addr":2,"wVal":516,"decs":qsTr("default value:516,instruction:Speed loop sampling frequency (Hz) = current loop sampling frequency /SpdLpRate. position loop sampling frequency (Hz) = speed loop sampling frequency /PosLpRate")},
    {"name":qsTr("ModScl"),"addr":3,"wVal":3000,"decs":qsTr("default value:3000,instruction:ModScl=3×(PwmPeriod+1)/2")},
    {"name":qsTr("PwmDeadTm"),"addr":4,"wVal":119,"decs":qsTr("default value:119,instruction:IGBT Dead Time(ns)=System master clock cycle(ns)×(PwmDeadTm+1)")},
    {"name":qsTr("SystemConfig"),"addr":5,"wVal":24,"decs":qsTr("default value:24,instruction:describe")},
    {"name":qsTr("LvAlmMonEnbl"),"addr":6,"wVal":0,"decs":qsTr("default value:0,instruction:0-Prohibit undervoltage alarm function，1-Allow undervoltage alarm function")},
    {"name":qsTr("DcBusOffset"),"addr":7,"wVal":4864,"decs":qsTr("default value:4864,instruction:DcBusOffset=The DC bus voltage is equal to zero, corresponding to the A/D conversion data")},
    {"name":qsTr("BusConfig"),"addr":8,"wVal":0,"decs":qsTr("default value:0,instruction:describe")},

    {"name":qsTr("DriverCtrl"),"addr":16,"wVal":7,"decs":qsTr("default value:7,instruction:describe")},
    {"name":qsTr("DBCtrl"),"addr":17,"wVal":2916,"decs":qsTr("default value:2916,instruction:describe")},
    {"name":qsTr("BrkCtrl"),"addr":18,"wVal":25700,"decs":qsTr("default value:25700,instruction:describe")},
    {"name":qsTr("InPortCtrl"),"addr":19,"wVal":2194,"decs":qsTr("default value:2194,instruction:describe")},
    {"name":qsTr("OutPortConfig"),"addr":20,"wVal":521,"decs":qsTr("default value:512,instruction:describe")},
    {"name":qsTr("SystemCtrl"),"addr":21,"wVal":7,"decs":qsTr("default value:7,instruction:describe")},
    {"name":qsTr("ModelControl"),"addr":22,"wVal":0,"decs":qsTr("default value:0,instruction:describe")},
    {"name":qsTr("CmdControl"),"addr":23,"wVal":7,"decs":qsTr("default value:7,instruction:describe")},
    {"name":qsTr("VCmdOffset"),"addr":24,"wVal":0,"decs":qsTr("default value:0,instruction:VCmd_Offset= analog command voltage equal to zero, corresponding to the A/D conversion data")},
    {"name":qsTr("RotEnControl"),"addr":25,"wVal":33,"decs":qsTr("default value:33,instruction:describe")},
    {"name":qsTr("RotEncMaxCnt"),"addr":26,"wVal":16383,"decs":qsTr("default value:16383,instruction:RotEnc_MaxCnt=4 * PPR-1, where PPR is the number of pulses per turn per encoder for the encoder")},
    {"name":qsTr("RotEncZCnt"),"addr":27,"wVal":1250,"decs":qsTr("default value:1250,instruction:An electrical angle of an Z pulse opposite the negative potential of U")},
    {"name":qsTr("LnrEncCtrl"),"addr":28,"wVal":2,"decs":qsTr("default value:2,instruction:describe")},
    {"name":qsTr("EncDivCtrl"),"addr":29,"wVal":9,"decs":qsTr("default value:9,instruction:describe")},
    {"name":qsTr("EncDivNum"),"addr":30,"wVal":1,"decs":qsTr("default value:1,instruction:EncDiv_Num/EncDiv_Den≥1；Otherwise, the output pulse is uncertain")},
    {"name":qsTr("EncDivDen"),"addr":31,"wVal":1,"decs":qsTr("default value:1,instruction:EncDiv_Num/EncDiv_Den≥1；Otherwise, the output pulse is uncertain")},

    {"name":qsTr("IfbU_Offset"),"addr":48,"wVal":0,"decs":qsTr("default value:0,instruction:IfbU_Offset=U phase current equals zero, corresponding to the A/D conversion data")},
    {"name":qsTr("IfbW_Offset"),"addr":49,"wVal":0,"decs":qsTr("default value:0,instruction:IfbW_Offset=W phase current equals zero, corresponding to the A/D conversion data")},
    {"name":qsTr("IdScl"),"addr":50,"wVal":5148,"decs":qsTr("default value:5148,instruction:for PMSM，IdScl=MHC×4096×2^10/(2048×SQRT(2)×Irated×1.64676)，Among them, MHC is the maximum ideal range of current sensor, and Irated is the rated current effective value")},
    {"name":qsTr("Iqscl"),"addr":51,"wVal":5148,"decs":qsTr("default value:5148,instruction:for PMSM，IqScl=MHC×4096×2^10/(2048×SQRT(2)×Irated×1.64676)，Among them, MHC is the maximum ideal range of current sensor, and Irated is the rated current effective value")},
    {"name":qsTr("ElecAngScl"),"addr":52,"wVal":4096,"decs":qsTr("default value:4096,instruction:ElecAngScl=P x 4096 x 2^12/ (4 * PPR), where P is the polar logarithm, and PPR is the number of pulses per phase per turn of the encoder")},
    {"name":qsTr("SlipGain"),"addr":53,"wVal":0,"decs":qsTr("default value:0,instruction:For IM，SlipGain=RatedSlipSpeed/RatedIqRef=2^24×RatedSlipFreq(Hz)/CurrentLoopUpdateRate")},
    {"name":qsTr("K1Notch"),"addr":54,"wVal":65535,"decs":qsTr("default value:65535,instruction:K1_Notch=k1×2^15，k1=1+a，a=(1-tan(Bw/2))/(1+tan(Bw/2))，Bw=2π×fb/fs,Where FS is the current loop sampling frequency, FB -3dB notch width; 1 = k1<2, K1, and when the 2 notch filter has no effect")},
    {"name":qsTr("K2Notch"),"addr":55,"wVal":0,"decs":qsTr("default value:0,instruction:K2_Notch=k2×2^15，k2=b×(1+a)，a=(1-tan(Bw/2))/(1+tan(Bw/2))，b=cosω0，Bw=2π×fb/fs，ω0=2π×f0/fs,Where FS is the current loop sampling frequency, F0 notch center frequency, FB -3dB notch width; 0 = k2<2")},
    {"name":qsTr("Ktf"),"addr":56,"wVal":0,"decs":qsTr("default value:0,instruction:Ktf=2^16 * (1-tan (omega c/2)) / (1 Tan (omega c/2)), Omega c=2 pi * fc/fs, where FS is the current loop sampling frequency, and FC is the -3dB clipping frequency")},
    {"name":qsTr("OvrLdLim"),"addr":57,"wVal":21845,"decs":qsTr("default value:21845,instruction:OvrLdLim=32768/coeff，Coeff for overload factor, e.g. is set to 1.5 times the rated value, OvrLdLim=21845")},
    {"name":qsTr("TrqLimp"),"addr":58,"wVal":12288,"decs":qsTr("default value:12288,instruction:TrqLimP=4096 * MLC/ (SQRT (2) * Irated), where MLC is the maximum linear range of the current sensor, and Irated is the rated current effective value")},
    {"name":qsTr("TrqLimN"),"addr":59,"wVal":-12288,"decs":qsTr("default value:-12288,instruction:TrqLimN=-4096 * MLC/ (SQRT (2) * Irated), where MLC is the maximum linear range of the current sensor, and Irated is the rated current effective value")},
    {"name":qsTr("IErrLim"),"addr":60,"wVal":1024,"decs":qsTr("default value:1024,instruction:It is used to achieve large deviation, small gain, small deviation and large gain")},
    {"name":qsTr("Kpid"),"addr":61,"wVal":2000,"decs":qsTr("default value:2000,instruction:11 decimal places")},
    {"name":qsTr("Kiid"),"addr":62,"wVal":1500,"decs":qsTr("default value:1500,instruction:16 decimal places")},
    {"name":qsTr("Kpiq"),"addr":63,"wVal":2000,"decs":qsTr("default value:2000,instruction:11 decimal places")},
    {"name":qsTr("Kiiq"),"addr":64,"wVal":1500,"decs":qsTr("default value:1500,instruction:16 decimal places")},
    {"name":qsTr("Ked"),"addr":65,"wVal":0,"decs":qsTr("default value:0,instruction:For PMSM, Ked=8192 * P * MaxRPM * Ls * SQRT (2) * Irated/ (15 * 1.64676 * 310), in which P is the extreme logarithm, MaxRPM is the highest speed, Ls is motor winding inductance, and Irated is the rated current effective value")},
    {"name":qsTr("Keq"),"addr":66,"wVal":0,"decs":qsTr("default value:0,instruction:For PMSM, Ked=8192 * P * MaxRPM  * pi / psi (15 x 1.64676 x 310), where P is the pole number, MaxRPM is the highest speed of permanent magnet motor rotor flux for PSI")},
    {"name":qsTr("Ktg"),"addr":67,"wVal":0,"decs":qsTr("default value:0,instruction:Ktg=2^14×(0~400%)")},
    {"name":qsTr("Krt"),"addr":68,"wVal":0,"decs":qsTr("default value:0,instruction:Krt=2^22/(tr*fs)，Among them, FS is the current loop sampling frequency (Hz), and TR is the rotor time constant (s) of induction motors")},
    {"name":qsTr("RatedFreq"),"addr":69,"wVal":0,"decs":qsTr("default value:0,instruction:RatedFreq=2^15*RatedRPM/MaxRPM")},
    {"name":qsTr("VdLim"),"addr":70,"wVal":6632,"decs":qsTr("default value:6632,instruction:Maximum voltage regulation of VqLim=2^14 * D axis /1.64676")},
    {"name":qsTr("VqLim"),"addr":71,"wVal":6632,"decs":qsTr("default value:6632,instruction:Maximum voltage regulation of VqLim=2^14 * Q axis /1.64676")},
    {"name":qsTr("BrkZeroSpd"),"addr":72,"wVal":16384,"decs":qsTr("default value:16384,instruction:Maximum current setting, motor rated =4096")},

    {"name":qsTr("SpdScl"),"addr":80,"wVal":3200,"decs":qsTr("default value:3200,instruction:SpdScl=2^15 x 60 x fclk/ (4 * PPR * MaxRPM * 256), wherein fclk is the system master clock frequency, PPR is the encoder line number, and MaxRPM is the highest speed")},
    {"name":qsTr("NilMtrSpdDly"),"addr":81,"wVal":30,"decs":qsTr("default value:30,instruction:NilMtrSpdDly= speed ring sampling frequency * 60/ (4 * PPR * MinRPM), in which PPR is the encoder line, and MinRPM is the minimum speed")},
    {"name":qsTr("NilCmdSpdDly"),"addr":82,"wVal":30,"decs":qsTr("default value:30,instruction:NilCmdSpdDly=NilMtrSpdDly×(Electronic gear ratio)")},
    {"name":qsTr("SpdCmp"),"addr":83,"wVal":300,"decs":qsTr("default value:300,instruction:SpdCmp=2^15 * 60 * speed ring sampling frequency / (PPR * MaxRPM), in which PPR is the encoder line, and MaxRPM is the highest speed")},
    {"name":qsTr("ZeroSpeed"),"addr":84,"wVal":1,"decs":qsTr("default value:1,instruction:When the actual speed is less than MaxRPM * ZeroSpeed/2^15, the speed is considered to be zero")},
    {"name":qsTr("SpdAccRate"),"addr":85,"wVal":256,"decs":qsTr("default value:256,instruction:8 decimal places")},
    {"name":qsTr("SpdDecRate"),"addr":86,"wVal":256,"decs":qsTr("default value:256,instruction:8 decimal places")},
    {"name":qsTr("Kfg"),"addr":87,"wVal":0,"decs":qsTr("default value:0,instruction:Kfg=2^14×(0~400%)")},
    {"name":qsTr("Kff"),"addr":88,"wVal":0,"decs":qsTr("default value:0,instruction:Kff=2^16×(1-tan(ωc/2))/(1+tan(ωc/2))，ωc=2π×fc/fs,Among them, FS is the speed ring sampling frequency, and FC is -3dB clipping frequency")},
    {"name":qsTr("SpdLimP"),"addr":89,"wVal":25000,"decs":qsTr("default value:25000,instruction:SpdLimP=2^15×(0~100%)")},
    {"name":qsTr("SpdLimN"),"addr":90,"wVal":-25000,"decs":qsTr("default value:-25000,instruction:SpdLimN=-2^15×(0~100%)")},
    {"name":qsTr("SpdErrLim"),"addr":91,"wVal":25000,"decs":qsTr("default value:1990,instruction:It is used to achieve large deviation, small gain, small deviation and large gain")},
    {"name":qsTr("KpV"),"addr":92,"wVal":100,"decs":qsTr("default value:100,instruction:5 decimal places")},
    {"name":qsTr("KiV"),"addr":93,"wVal":200,"decs":qsTr("default value:200,instruction:13 decimal places")},
    {"name":qsTr("KfV"),"addr":94,"wVal":65535,"decs":qsTr("default value:65535,instruction:KfV=2^16×(0~100%)，Among them: 0-IP control, 100%-PI control, 0~100%-PDFF control")},
    {"name":qsTr("BrkZeroSpd"),"addr":95,"wVal":100,"decs":qsTr("default value:100,instruction:When the actual speed is less than MaxRPM * ZeroSpeed/2^15, turn off the brake signal")},

    {"name":qsTr("PulsSclNum"),"addr":112,"wVal":1,"decs":qsTr("default value:1,instruction:1/32768<PulsScl_Num/PulsScl_Den<1024")},
    {"name":qsTr("PulsSclDen"),"addr":113,"wVal":1,"decs":qsTr("default value:1,instruction:1/32768<PulsScl_Num/PulsScl_Den<1024")},
    {"name":qsTr("PosErrOvrLim"),"addr":114,"wVal":256,"decs":qsTr("default value:256,instruction:The actual limit is PosErrOvrLim * 256 pulse equivalent")},
    {"name":qsTr("CoinLim"),"addr":115,"wVal":10,"decs":qsTr("default value:10,instruction:When the actual position deviation is less than CoinLim pulse equivalent, the position is considered to be complete")},
    {"name":qsTr("POvrTrvLimL"),"addr":116,"wVal":65535,"decs":qsTr("default value:65535,instruction:A positive overshoot occurs when the actual position exceeds [POvrTrvLimH and POvrTrvLimL] pulses are equivalent")},
    {"name":qsTr("POvrTrvLimH"),"addr":117,"wVal":32767,"decs":qsTr("default value:32767,instruction:A positive overshoot occurs when the actual position exceeds [POvrTrvLimH and POvrTrvLimL] pulses are equivalent")},
    {"name":qsTr("NOvrTrvLimL"),"addr":118,"wVal":1,"decs":qsTr("default value:1,instruction:A reverse overshoot occurs when the actual position exceeds [NOvrTrvLimH and NOvrTrvLimL] pulses are equivalent")},
    {"name":qsTr("NOvrTrvLimH"),"addr":119,"wVal":32768,"decs":qsTr("default value:32768,instruction:A reverse overshoot occurs when the actual position exceeds [NOvrTrvLimH and NOvrTrvLimL] pulses are equivalent")},
    {"name":qsTr("Ksf"),"addr":120,"wVal":-32768,"decs":qsTr("default value:-32768,instruction:Ksf=2^16×T/(T+1),The T= /Ts, which is the filter time constant Ts for the position loop sampling period")},
    {"name":qsTr("KpP"),"addr":121,"wVal":10,"decs":qsTr("default value:10,instruction:5 decimal places")},

    {"name":qsTr("InitElecAng001"),"addr":177,"wVal":1024,"decs":qsTr("default value:1.24,instruction:The motor encoders U, V, and W correspond to 001 rotor positions; are stored only in EEPROM")},
    {"name":qsTr("InitElecAng010"),"addr":178,"wVal":208,"decs":qsTr("default value:208,instruction:The motor encoders U, V, and W correspond to 010 rotor positions; are stored only in EEPROM")},
    {"name":qsTr("InitElecAng011"),"addr":179,"wVal":1625,"decs":qsTr("default value:1625,instruction:The motor encoders U, V, and W correspond to 011 rotor positions; are stored only in EEPROM")},
    {"name":qsTr("InitElecAng100"),"addr":180,"wVal":1875,"decs":qsTr("default value:1875,instruction:The motor encoders U, V, and W correspond to 100 rotor positions; are stored only in EEPROM")},
    {"name":qsTr("InitElecAng101"),"addr":181,"wVal":1458,"decs":qsTr("default value:1458,instruction:The motor encoders U, V, and W correspond to 101 rotor positions; are stored only in EEPROM")},
    {"name":qsTr("InitElecAng110"),"addr":182,"wVal":2292,"decs":qsTr("default value:2292,instruction:The motor encoders U, V, and W correspond to 110 rotor positions; are stored only in EEPROM")},
];

var qkStatusInfo =
[
    {"name":qsTr("SystemStatus"),"addr":0,"decs":qsTr("describe")},
    {"name":qsTr("FaultStatus"),"addr":1,"decs":qsTr("(0 - no fault, 1 - fault) bit0: power on initialization failure, bit1:EEPROM fault, bit2:A/D converter fault, bit3:operation engine system timeout, bit4: radiator overheated, bit5: main power supply overvoltage, undervoltage  bit6: main power supply, bit7:the main power supply is off, bit8:IGBT overcurrent, bit9: IGBT overheating, bit10:overload, bit11:overspeed, bit12: position command pulse frequency is too high, bit13: the position error is too large, bit14:DSP synchronous fault,bit15:  overcurrent fault.")},
    {"name":qsTr("WorkingStatus"),"addr":2,"decs":qsTr("Bit3: servo control enable status(0 - servo off, 1 - servo on)")},
];
